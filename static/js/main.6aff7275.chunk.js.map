{"version":3,"sources":["Apis/API.js","Apis/BaseApi.js","Apis/WeatherApi.js","Utils/listUtils.js","Utils/converUtils.js","Redux/weather/types.js","Assets/imgaes/munich.jpg","Components/AppCityInfo/index.js","Components/AppTempCard/index.js","Components/AppChart/index.js","Views/Temperatures/index.js","Views/Main/index.js","Views/Loading/index.js","Layouts/AppContainer/index.js","Redux/weather/actions.js","Redux/weather/reducer.js","Redux/reducer.js","Redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["API","url","params","config","axios","get","this","APP_HOST","APPID","process","BaseApi","extraParams","makeGet","GET_COLLECTION","then","data","Promise","resolve","response","catch","error","WeatherApi","getListByDay","list","Data","Day","forEach","element","index","dateTime","format","Date","dt_txt","isEqual","Object","keys","length","push","getDeg","deg","unit","toFixed","getDegWU","GET_WEATHER","WEATHER_LIST_SUCCESS","WEATHER_LIST_ERROR","useStyles","makeStyles","root","position","height","blur","background","Image","backgroundSize","backgroundPosition","filter","width","zIndex","overlay","title","fontSize","desc","marginBottom","AppCityInfo","name","sunrise","sunset","classes","getTime","time","Card","boxShadow","className","variant","CardContent","Typography","component","Grid","container","Box","mr","color","cursor","marginTop","AppTempCard","date","item","onClick","aveTemp","maxTemp","minTemp","aveHumidity","aveFL","AppChart","Paper","map","main","temp","population","max","valueField","argumentField","text","getDate","right","float","marginRight","left","marginLeft","Temperatures","useSelector","state","weather","city","useState","setUnit","selectedDate","setSelectedDate","page","setPage","useEffect","xs","FormControl","FormLabel","RadioGroup","row","value","onChange","e","target","FormControlLabel","control","Radio","label","Button","ArrowBack","ArrowForward","slice","sm","md","lg","Main","loading","Loading","spacing","theme","display","margin","CircularProgress","AppContainer","dispatch","useDispatch","type","q","cnt","units","items","payload","getWeatherListError","statusText","itemsCnt","sumTemp","sumHumidity","sumFL","d","temp_min","temp_max","humidity","feels_like","getAve","Container","maxWidth","INIT_STATE","rootReducer","combineReducers","action","store","createStore","App","StrictMode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6aff7275.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport class API {\n  static APPID = process.env.REACT_APP_API_APP_ID;\n  static APP_HOST = process.env.REACT_APP_API_HOST;\n\n  static async makeGet(url, params = {}, config = {}) {\n    return axios.get(`${this.APP_HOST}${url}`, {\n      ...config,\n      params: {\n        APPID: this.APPID,\n        ...params,\n      },\n    });\n  }\n}\n","import { API } from \"./API\";\nexport class BaseApi extends API {\n  static GET_COLLECTION = \"/\";\n\n  static async get(extraParams = {}) {\n    return this.makeGet(this.GET_COLLECTION, extraParams)\n      .then(({ data }) => {\n        return Promise.resolve({\n          response: data,\n        });\n      })\n      .catch((error) => {\n        return Promise.resolve({\n          error,\n        });\n      });\n  }\n}\n","import { BaseApi } from \"./BaseApi\";\n\nexport class WeatherApi extends BaseApi {\n  static GET_COLLECTION = \"/forecast\";\n}\n","import { format, isEqual } from \"date-fns\";\n\nconst getAve = (data) => {\n  const itemsCnt = data.length;\n\n  let sumTemp = 0;\n  let minTemp = 0;\n  let maxTemp = 0;\n  let sumHumidity = 0;\n  let sumFL = 0;\n\n  data.forEach((d) => {\n    sumTemp += d.main.temp;\n\n    if (minTemp === 0 || minTemp > d.main.temp_min) minTemp = d.main.temp_min;\n    if (maxTemp < d.main.temp_max) maxTemp = d.main.temp_max;\n\n    sumHumidity += d.main.humidity;\n    sumFL += d.main.feels_like;\n  });\n\n  return {\n    aveTemp: sumTemp / itemsCnt,\n    minTemp,\n    maxTemp,\n    aveHumidity: sumHumidity / itemsCnt,\n    aveFL: sumFL / itemsCnt,\n  };\n};\n\nexport const getListByDayWithAverages = (list) => {\n  const Data = getListByDay(list);\n\n  const newDate = Data.map((e) => {\n    return {\n      ...e,\n      ...getAve(e.data),\n    };\n  }); \n  return newDate;\n};\n\nexport const getListByDay = (list) => {\n  const Data = [];\n  let Day = {};\n\n  list.forEach((element, index) => {\n    const dateTime = format(new Date(element.dt_txt), \"yyyy-MM-dd\");\n\n    if (isEqual(new Date(Day.dateTime), new Date(dateTime))) {\n      Day = {\n        ...Day,\n        data: [\n          ...Day?.data,\n          {\n            ...element,\n          },\n        ],\n      };\n    } else {\n      if (Object.keys(Day).length > 0) {\n        Data.push(Day);\n      }\n      Day = {\n        dateTime,\n        data: [\n          {\n            ...element,\n          },\n        ],\n      };\n    }\n\n    if (index === list.length - 1) {\n      Data.push(Day);\n    }\n  });\n  return Data;\n};\n","export const getDeg = (deg, unit) => {\n  if (unit === \"C\") {\n    return `${((deg - 32) * 0.555555556).toFixed(2)}°C`;\n  }\n  return `${deg.toFixed(2)}°F`;\n};\n\nexport const getDegWU = (deg, unit) => {\n  if (unit === \"C\") {\n    return (deg - 32) * 0.555555556;\n  }\n  return deg;\n};\n","export const GET_WEATHER = \"GET_WEATHER\";\nexport const WEATHER_LIST_SUCCESS = \"WEATHER_LIST_SUCCESS\";\nexport const WEATHER_LIST_ERROR = \"WEATHER_LIST_ERROR\";\n","export default __webpack_public_path__ + \"static/media/munich.ac263ce5.jpg\";","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  makeStyles,\n  Box,\n} from \"@material-ui/core\";\nimport { format } from \"date-fns\";\n\nimport Image from \"../../Assets/imgaes/munich.jpg\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"relative\",\n    height: \"200px\",\n  },\n  blur: {\n    background: `url(${Image}) no-repeat`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    position: \"absolute\",\n    filter: \"blur(8px)\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 0,\n  },\n  overlay: {\n    position: \"absolute\",\n    width: \"200px\",\n    height: \"100%\",\n    zIndex: 1,\n  },\n  title: {\n    fontSize: 18,\n  },\n  desc: {\n    marginBottom: 14,\n  },\n});\nfunction AppCityInfo({ name, sunrise, sunset }) {\n  const classes = useStyles();\n\n  const getTime = (time)=>{\n\n    return format(new Date(time * 1000), \"HH:mm:ss\")\n  }\n\n  return (\n    <Card boxShadow={0} className={classes.root} variant=\"elevation\">\n      <div className={classes.blur}></div>\n\n      <CardContent className={classes.overlay}>\n        <Typography variant=\"h2\" component=\"h2\">\n          {name}\n        </Typography>\n        <Grid container>\n          <Box mr={4}>\n            <Typography className={classes.title} variant=\"h5\" component=\"h2\">\n              SUNRISE\n            </Typography>\n            <Typography className={classes.desc} color=\"textSecondary\">\n              {getTime(sunrise)}\n            </Typography>\n          </Box>\n          <Box>\n            <Typography className={classes.title} variant=\"h5\" component=\"h2\">\n              SUNSET\n            </Typography>\n            <Typography className={classes.desc} color=\"textSecondary\">\n            {getTime(sunset)}\n\n            </Typography>\n          </Box>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport { AppCityInfo };\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  makeStyles,\n  Box,\n} from \"@material-ui/core\";\nimport { format } from \"date-fns\";\nimport { getDeg } from \"../../Utils\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"relative\",\n    cursor: \"pointer\",\n  },\n  title: {\n    fontSize: 16,\n    marginTop: 25,\n  },\n  desc: {\n    fontSize: 16,\n  },\n});\nfunction AppTempCard({ item, unit, onClick }) {\n  const { dateTime, aveTemp, maxTemp, minTemp, aveHumidity, aveFL } = item;\n\n  const classes = useStyles();\n\n  const getDate = (date) => {\n    return format(new Date(date), \"dd MMM y\");\n  };\n\n  return (\n    <Card\n      onClick={() => {\n        onClick(item);\n      }}\n      boxShadow={0}\n      className={classes.root}\n      variant=\"elevation\"\n    >\n      <CardContent>\n        <Typography variant=\"h4\" component=\"h4\">\n          {getDate(dateTime)}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h4\">\n          {getDeg(aveTemp, unit)}\n          <Typography className={classes.desc} color=\"textSecondary\">\n            Feels Like {getDeg(aveFL, unit)}\n          </Typography>\n        </Typography>\n        <Grid container>\n          <Box mr={5}>\n            <Typography className={classes.title}>HIGH</Typography>\n            <Typography className={classes.desc} color=\"textSecondary\">\n              {getDeg(maxTemp, unit)}\n            </Typography>\n          </Box>\n          <Box mr={5}>\n            <Typography className={classes.title}>LOW</Typography>\n            <Typography className={classes.desc} color=\"textSecondary\">\n              {getDeg(minTemp, unit)}\n            </Typography>\n          </Box>\n          <Box>\n            <Typography className={classes.title}>HUMIDITY</Typography>\n            <Typography className={classes.desc} color=\"textSecondary\">\n              {`${aveHumidity.toFixed(2)}%`}\n            </Typography>\n          </Box>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport { AppTempCard };\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  Chart,\n  BarSeries,\n  Title,\n  ArgumentAxis,\n  ValueAxis,\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport { Animation } from \"@devexpress/dx-react-chart\";\n\nimport { format } from \"date-fns\";\nimport { getDegWU, getDeg } from \"../../Utils\";\n\nfunction AppChart({ date, data, unit }) {\n  const getData = () => {\n    return data.map((item) => {\n      return {\n        time: `${getTime(item.dt_txt)} | ${getDeg(item.main.temp, unit)}`,\n        population: getDegWU(item.main.temp, unit),\n      };\n    });\n  };\n\n  const getDate = (date) => {\n    return format(new Date(date), \"dd MMM y\");\n  };\n  const getTime = (date) => {\n    return format(new Date(date), \"HH:mm\");\n  };\n\n  return (\n    <Paper data-testid=\"chart\">\n      <Chart data={getData()}>\n        <ArgumentAxis />\n        <ValueAxis max={8} />\n        <BarSeries valueField=\"population\" argumentField=\"time\" />\n        <Title text={getDate(date)} />\n        <Animation />\n      </Chart>\n    </Paper>\n  );\n}\n\nexport { AppChart };\n","import React, { useEffect, useState } from \"react\";\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\nimport {\n  Grid,\n  Button,\n  makeStyles,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { AppChart, AppCityInfo, AppTempCard } from \"../../Components\";\n\nconst useStyles = makeStyles({\n  right: {\n    float: \"right\",\n    marginRight: \"-17px\",\n  },\n  left: {\n    marginLeft: \"-17px\",\n  },\n});\nfunction Temperatures() {\n  const { city, list } = useSelector((state) => state.weather);\n  const [unit, setUnit] = useState(\"F\");\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [page, setPage] = useState(1);\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (list.length > 0) {\n      setSelectedDate(list[0]);\n    }\n  }, [list]);\n  \n  return (\n    <>\n      <Grid item xs={12}>\n        <AppCityInfo\n          name={city.name}\n          sunrise={city.sunrise}\n          sunset={city.sunset}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Unit</FormLabel>\n          <RadioGroup\n            row\n            value={unit}\n            name=\"unit\"\n            onChange={(e) => {\n              setUnit(e.target.value);\n            }}\n          >\n            <FormControlLabel\n              value=\"F\"\n              control={<Radio color=\"default\" />}\n              label=\"Fahrenheit\"\n            />\n            <FormControlLabel\n              value=\"C\"\n              control={<Radio color=\"default\" />}\n              label=\"Celsius\"\n            />\n          </RadioGroup>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={12}>\n        {page !== 1 && (\n          <Button\n            onClick={() => {\n              setPage(page - 1);\n            }}\n            className={classes.left}\n            color=\"primary\"\n          >\n            <ArrowBack fontSize=\"large\" />\n          </Button>\n        )}\n\n        {list.length / 3 > page && (\n          <Button\n            onClick={() => {\n              setPage(page + 1);\n            }}\n            className={classes.right}\n            color=\"primary\"\n          >\n            <ArrowForward fontSize=\"large\" />\n          </Button>\n        )}\n      </Grid>\n\n      {list.slice((page - 1) * 3, (page - 1) * 3 + 3).map((item) => {\n        return (\n          <Grid item xs={12} sm={6} md={6} lg={4}>\n            <AppTempCard onClick={setSelectedDate} unit={unit} item={item} />\n          </Grid>\n        );\n      })}\n\n      {selectedDate && (\n        <Grid item xs={12}>\n          <AppChart\n            data={selectedDate.data}\n            date={selectedDate.dateTime}\n            unit={unit}\n          />\n        </Grid>\n      )}\n    </>\n  );\n}\n\nexport { Temperatures };\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Loading } from \"..\";\nimport { Temperatures } from \"../Temperatures\";\n\nfunction Main() {\n  const { loading } = useSelector((state) => state.weather);\n  if (loading) {\n    return <Loading />;\n  }\n  \n  return (\n    <Grid container spacing={3}>\n      <Temperatures />\n    </Grid>\n  );\n}\n\nexport { Main };\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  loading: {\n    margin: \"auto\",\n  },\n}));\n\nfunction Loading() {\n  const classes = useStyles();\n\n  return (\n    <div data-testid='loading' className={classes.root}>\n      <CircularProgress className={classes.loading} />\n    </div>\n  );\n}\n\nexport { Loading };\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport { WeatherApi } from \"../../Apis\";\nimport { getListByDayWithAverages } from \"../../Utils\";\nimport {\n  getWeatherList,\n  getWeatherListSuccess,\n  getWeatherListError,\n} from \"../../Redux/weather/actions\";\nimport { Main } from \"../../Views\";\n\nfunction AppContainer() {\n  const dispatch = useDispatch();\n\n  const getDate = () => {\n    dispatch(getWeatherList());\n    WeatherApi.get({\n      q: \"Munich,de\",\n      cnt: 40,\n      units: \"imperial\",\n    }).then(({ error, response }) => {\n      if (error) {\n        dispatch(getWeatherListError(error.response?.statusText));\n      } else if (response) {\n        const Data = getListByDayWithAverages(response.list);\n        dispatch(getWeatherListSuccess(Data, response.city));\n      }\n    });\n  };\n\n  useEffect(() => {\n    getDate();\n  }, []);\n\n  return (\n    <Container spacing={3} maxWidth=\"lg\">\n      <Main />\n    </Container>\n  );\n}\n\nexport { AppContainer };\n","import { GET_WEATHER, WEATHER_LIST_SUCCESS, WEATHER_LIST_ERROR } from \"./types\";\n\nexport const getWeatherList = () => ({\n  type: GET_WEATHER,\n});\n\nexport const getWeatherListSuccess = (items, city) => ({\n  type: WEATHER_LIST_SUCCESS,\n  payload: {\n    items,\n    city,\n  },\n});\n\nexport const getWeatherListError = (error) => ({\n  type: WEATHER_LIST_ERROR,\n  payload: {\n    error,\n  },\n});\n","import { GET_WEATHER, WEATHER_LIST_SUCCESS, WEATHER_LIST_ERROR } from \"./types\";\n\nconst INIT_STATE = {\n  loading: true,\n  list: null,\n  city: null,\n  error: null,\n};\n\nexport default function reducer(state = INIT_STATE, action) {\n  switch (action.type) {\n    case GET_WEATHER:\n      return { ...state, loading: true };\n\n    case WEATHER_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        list: action.payload.items,\n        city: action.payload.city,\n      };\n\n    case WEATHER_LIST_ERROR:\n      return { ...state, loading: false, error: action.payload.error };\n    default:\n      return { ...state };\n  }\n}\n","import { combineReducers } from \"redux\";\nimport weatherReducer from \"./weather/reducer\";\n\nconst rootReducer = combineReducers({\n  weather: weatherReducer,\n});\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducer\";\n\nconst store = createStore(rootReducer, {});\n\nexport default store;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { AppContainer } from \"./Layouts\";\nimport store from \"./Redux/store\";\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}